{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/templates/blog-index.js","webpack:///./src/utils/helpers.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/Bio.js","webpack:///./src/assets/profile-pic.jpg","webpack:///./src/components/Panel.js","webpack:///./src/components/SEO.js"],"names":["Footer","render","style","marginTop","rhythm","paddingTop","float","href","target","rel","React","Component","BlogIndexTemplate","siteTitle","get","this","langKey","props","pageContext","posts","Layout","location","title","SEO","Bio","Panel","map","node","fields","slug","key","fontFamily","fontSize","marginBottom","boxShadow","to","formatPostDate","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","pageQuery","minutes","cups","Math","round","Array","E","fill","join","lang","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean","$export","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","length","aLen","arguments","index","undefined","end","endPos","display","src","profilePic","alt","marginRight","width","height","borderRadius","maxWidth","children","border","padding","background","wordBreak","query","meta","image","description","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps"],"mappings":"2JA8CeA,E,gLAzCbC,OAAA,WACE,OACE,4BACEC,MAAO,CACLC,UAAWC,YAAO,KAClBC,WAAYD,YAAO,KAGrB,yBAAKF,MAAO,CAAEI,MAAO,UACnB,uBAAGC,KAAK,WAAWC,OAAO,SAASC,IAAI,uBAAvC,QAIF,uBACEF,KAAK,wCACLC,OAAO,SACPC,IAAI,uBAHN,WAMK,IAjBP,IAkBS,IACP,uBACEF,KAAK,gCACLC,OAAO,SACPC,IAAI,uBAHN,UAMK,IAzBP,IA0BS,IACP,uBACEF,KAAK,qCACLC,OAAO,SACPC,IAAI,uBAHN,Y,GA9BaC,IAAMC,W,yFCQrBC,E,gLACJX,OAAA,WACE,IAAMY,EAAYC,IAAIC,KAAM,sCACtBC,EAAUD,KAAKE,MAAMC,YAAYF,QAEjCG,EAAQL,IAAIC,KAAM,sCAExB,OACE,kBAACK,EAAA,EAAD,CAAQC,SAAUN,KAAKE,MAAMI,SAAUC,MAAOT,GAC5C,kBAACU,EAAA,EAAD,MACA,+BACE,kBAACC,EAAA,EAAD,OAEF,8BACe,OAAZR,GAAgC,UAAZA,GACnB,kBAACS,EAAA,EAAD,gCAC2B,IACzB,uBACElB,KAAK,+EACLC,OAAO,SACPC,IAAI,uBAHN,+BAFF,KAaDU,EAAMO,IAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQR,IAAIa,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACE,6BAASC,IAAKH,EAAKC,OAAOC,MACxB,gCACE,wBACE3B,MAAO,CACL6B,WAAY,yBACZC,SAAU5B,YAAO,GACjB6B,aAAc7B,YAAO,OAGvB,kBAAC,OAAD,CACEF,MAAO,CAAEgC,UAAW,QACpBC,GAAIR,EAAKC,OAAOC,KAChBpB,IAAI,YAEHa,IAGL,+BACGc,YAAeT,EAAKU,YAAYC,KAAMtB,GADzC,MAESuB,YAAkBZ,EAAKa,cAGlC,uBACEC,wBAAyB,CAAEC,OAAQf,EAAKU,YAAYM,eAM9D,kBAAC,EAAD,Q,GA5DwBjC,IAAMC,WAoEzBiC,GAFEhC,YAEO,e,weChFf,SAAS2B,EAAkBM,GAChC,IAAIC,EAAOC,KAAKC,MAAMH,EAAU,GAEhC,OAAIC,EAAO,EACC,IAAIG,MAAMF,KAAKC,MAAMF,EAAOC,KAAKG,IACxCC,KAAK,MACLC,KAAK,IAFR,IAEeP,EAFf,YAIU,IAAII,MAAMH,GAAQ,GAAGK,KAAK,MAAMC,KAAK,IAA/C,IAAsDP,EAAtD,YAKG,SAAST,EAAeE,EAAMe,GAAO,IAAD,EACzC,GAAiD,mBAAtCC,KAAKC,UAAUC,mBACxB,OAAOlB,EAGTA,EAAO,IAAIgB,KAAKhB,GAChB,IAAMmB,EAAO,CACXJ,EACA,CAAEK,IAAK,UAAWC,MAAO,OAAQC,KAAM,YACvCC,OAAOC,SACT,OAAO,EAAAxB,GAAKkB,mBAAL,UAA2BC,M,oBCtBpC,IAAIM,EAAU,EAAQ,GAEtBA,EAAQA,EAAQC,EAAG,QAAS,CAAEb,KAAM,EAAQ,OAE5C,EAAQ,IAAR,CAAiC,S,iCCHjC,IAAIc,EAAW,EAAQ,IACnBC,EAAkB,EAAQ,KAC1BC,EAAW,EAAQ,IACvBC,EAAOC,QAAU,SAAcC,GAO7B,IANA,IAAIC,EAAIN,EAASlD,MACbyD,EAASL,EAASI,EAAEC,QACpBC,EAAOC,UAAUF,OACjBG,EAAQT,EAAgBO,EAAO,EAAIC,UAAU,QAAKE,EAAWJ,GAC7DK,EAAMJ,EAAO,EAAIC,UAAU,QAAKE,EAChCE,OAAiBF,IAARC,EAAoBL,EAASN,EAAgBW,EAAKL,GACxDM,EAASH,GAAOJ,EAAEI,KAAWL,EACpC,OAAOC,I,mFCTH/C,E,gLACJvB,OAAA,WACE,OACE,yBACEC,MAAO,CACL6E,QAAS,OACT9C,aAAc7B,YAAO,KAGvB,yBACE4E,IAAKC,IACLC,IAAG,YACHhF,MAAO,CACLiF,YAAa/E,YAAO,IACpB6B,aAAc,EACdmD,MAAOhF,YAAO,GACdiF,OAAQjF,YAAO,GACfkF,aAAc,SAGlB,uBAAGpF,MAAO,CAAEqF,SAAU,MAAtB,mBACmB,IACjB,uBAAGhF,KAAK,yCAAR,aAFF,IAEiE,IAC/D,6BAHF,oC,GApBUG,IAAMC,WA8BTa,O,oBClCf4C,EAAOC,QAAU,IAA0B,2D,2DCoB5B5C,IAlBf,YAA0C,IAAzB+D,EAAwB,EAAxBA,SAAwB,IAAdtF,aAAc,MAAN,GAAM,EACvC,OACE,uBACEA,MAAK,eACH8B,SAAU,QACVyD,OAAQ,sBACRH,aAAc,SACdI,QAAS,SACTC,WAAY,uBACZC,UAAW,YACR1F,IAGJsF,K,8FCVDK,EAAK,aAgBX,SAAStE,EAAT,GAAsE,IAAvDuE,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOzE,EAAyC,EAAzCA,MAAO0E,EAAkC,EAAlCA,YAAanE,EAAqB,EAArBA,KAAqB,IAAfwB,YAAe,MAAR,KAAQ,EACnE,OACE,kBAAC,cAAD,CACEwC,MAAOA,EACP5F,OAAQ,SAAAgG,GAAS,IACPC,EAAiBD,EAAKE,KAAtBD,aACFE,EAAkBJ,GAAeE,EAAaF,YAC9CK,EAAYN,EAAWG,EAAaI,QAAnB,IAA8BP,EAAU,KACzDQ,EAAG,GAAML,EAAaI,QAAUzE,EACtC,OACE,kBAAC,IAAD,eACE2E,eAAgB,CAAEnD,SACb/B,EACD,CACEmF,cAAc,QAASP,EAAa5E,MACpCA,SAEF,CACEA,MAAU4E,EAAa5E,MAAlB,0BARb,CAUEwE,KAAM,CACJ,CACEY,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,SACVD,QAASJ,GAEX,CACEK,SAAU,WACVD,QAASrF,GAAS4E,EAAa5E,OAEjC,CACEsF,SAAU,iBACVD,QAASP,GAEX,CACEM,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAST,EAAaW,OAAOC,SAE/B,CACEJ,KAAM,gBACNC,QAASrF,GAAS4E,EAAa5E,OAEjC,CACEoF,KAAM,sBACNC,QAASP,IAGVW,OACCV,EACI,CACE,CACEO,SAAU,WACVD,QAASN,GAEX,CACEK,KAAM,gBACNC,QAASN,IAGb,IAELU,OAAOjB,OAlElB,SA0EJvE,EAAIyF,aAAe,CACjBlB,KAAM,GACNxE,MAAO,GACPO,KAAM,IAWON,O","file":"component---src-templates-blog-index-js-c89ffd1024e8f7dea43a.js","sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://mobile.twitter.com/yoxisem544\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/yoxisem544\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://medium.com/@davidlin_98861\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          medium\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {langKey !== 'en' && langKey !== 'zh-tw' && (\n            <Panel>\n              These articles have been{' '}\n              <a\n                href=\"https://github.com/yoxisem544/yoxisem544.github.io#contributing-translations\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                translated by the community\n              </a>\n              .\n            </Panel>\n          )}\n\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      fontFamily: 'Montserrat, sans-serif',\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{ boxShadow: 'none' }}\n                      to={node.fields.slug}\n                      rel=\"bookmark\"\n                    >\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` ‚Ä¢ ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n                />\n              </article>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('üç±')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('‚òïÔ∏è').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`David Lin`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 310 }}>\n          Personal blog by{' '}\n          <a href=\"https://mobile.twitter.com/yoxisem544\">David Lin</a>.{' '}\n          <br></br>I write something about Swift.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","module.exports = __webpack_public_path__ + \"static/profile-pic-53af144d52b11962dbbff58afd3560b3.jpg\";","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s ‚Äî ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} ‚Äî A blog by David Lin`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}