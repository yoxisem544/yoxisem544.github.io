{"componentChunkName":"component---src-templates-blog-post-js","path":"/thread-safety-in-ios/","webpackCompilationHash":"45e4894f8a4889864bd2","result":{"data":{"site":{"siteMetadata":{"title":"Hello Swift!","author":"David Lin"}},"markdownRemark":{"id":"74e82ad7-df57-51ef-ac07-113862753ed0","html":"<p>大部分在 Swift 中可以 mutate 的東西，都可能不是 thread safe 的。舉一個例子：</p>\n<p>假設有一個 Person 的物件，裡面有 name 跟 age 這兩個屬性，且同時有兩個人在不同執行緒中要更改 person 的 name，且在更改的同時有一個人要讀取該 person 的 name 屬性，最後讀取的人會得到什麼值？</p>\n<blockquote>\n<p>不知道。因為我們不知道這些人誰先完成了讀取或者寫入的動作。</p>\n</blockquote>\n<p>最直接的例子就是資料庫，在現實中的 app 裡，我們可能有很多的執行緒同時在讀取跟寫入，在這個情況下同時讀取寫入就會造成資料庫的 exception 進而讓 app 閃退。一個比較好的作法可能是寫入的時候一個一個寫入，讀取等到所有的寫入完成後才從資料庫讀取最新的資料出來，如此一來讀取時就不會讀取到寫入到一半的資料，或者讀取到舊的資料了。</p>\n<p>概念雖然簡單，但具體上應該怎麼做呢？</p>\n<h1 id=\"來做一個簡單的-thread-safe-array-吧\"><a href=\"#%E4%BE%86%E5%81%9A%E4%B8%80%E5%80%8B%E7%B0%A1%E5%96%AE%E7%9A%84-thread-safe-array-%E5%90%A7\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>來做一個簡單的 Thread Safe Array 吧</h1>\n<p>我們先來看一下多個執行緒同時操作同一個 array 會發生什麼事：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> array<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">concurrentPerform</span><span class=\"token punctuation\">(</span>iterations<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> i <span class=\"token keyword\">in</span>\n    <span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">concurrentPerform</span><span class=\"token punctuation\">(</span>iterations<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> j <span class=\"token keyword\">in</span>\n        array<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>結果就是閃退：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">error: Execution was interrupted, reason: EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0).</code></pre></div>\n<hr>\n<p>因為 Swift Array 底層實作的關係，會去操作 pointer（這裡不贅述，有興趣的朋友歡迎看 Swift source code），多執行緒同時操作 array 就會有這樣的問題。</p>\n<p>那我們能做的事情就是讓操作 array 的地方統一在一個執行緒中發生，因此我們可以在操作 array 前，先進到一個固定的執行緒後才執行 array 操作。</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> array<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">let</span> queue <span class=\"token operator\">=</span> <span class=\"token function\">DispatchQueue</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"io.some.thread\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">concurrentPerform</span><span class=\"token punctuation\">(</span>iterations<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> i <span class=\"token keyword\">in</span>\n    <span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">concurrentPerform</span><span class=\"token punctuation\">(</span>iterations<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> j <span class=\"token keyword\">in</span>\n        queue<span class=\"token punctuation\">.</span>async <span class=\"token punctuation\">{</span>\n            array<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>在同一個執行緒中執行 array 操作後就不會有 exception 了。</p>\n<h1 id=\"read-write-lock\"><a href=\"#read-write-lock\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Read Write Lock</h1>\n<p>在上面提到，我們希望所有的讀取發生在寫入之後，如此一來就可以讀取到寫入之後的最新資料。GCD 提供了一些方便的方法讓我們可以做到這樣的效果，就是使用 <code class=\"language-text\">DispatchWorkItemFlags</code> 中的 <code class=\"language-text\">.barrier</code> 可以達到這個效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> queue <span class=\"token operator\">=</span> <span class=\"token function\">DispatchQueue</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"io.some.thread\"</span><span class=\"token punctuation\">,</span> attributes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> index<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    queue<span class=\"token punctuation\">.</span><span class=\"token function\">async</span><span class=\"token punctuation\">(</span>flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>barrier<span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"performing write <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>index<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"performing write <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>index<span class=\"token delimiter variable\">)</span></span> completed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> index<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sync read task <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>index<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n    queue<span class=\"token punctuation\">.</span>sync <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inside read sync task <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>index<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sync read task <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>index<span class=\"token delimiter variable\">)</span></span> completed\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">concurrentPerform</span><span class=\"token punctuation\">(</span>iterations<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> i <span class=\"token keyword\">in</span>\n    <span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">concurrentPerform</span><span class=\"token punctuation\">(</span>iterations<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> j <span class=\"token keyword\">in</span>\n        <span class=\"token builtin\">Bool</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>可以試著自己跑跑看這個 sample code，可以看到讀取寫入一起發生時，write 會優先執行且 block read。</p>\n<blockquote>\n<blockquote>\n<p>有興趣閱讀更多關於 <a href=\"https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read/Write Lock</a> 可以點進連結看</p>\n</blockquote>\n</blockquote>\n<h1 id=\"完成-thread-safe-array\"><a href=\"#%E5%AE%8C%E6%88%90-thread-safe-array\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完成 Thread Safe Array</h1>\n<p>Array 常用的操作不外乎就是 append, subscript 等等：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">array<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>newElement<span class=\"token punctuation\">)</span>\narray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\narray<span class=\"token punctuation\">.</span><span class=\"token builtin\">first</span></code></pre></div>\n<p>如果想要讓這個 array thread safe 的話，我們必須對他做一層包裝：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SafeArray</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Element</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">let</span> queue <span class=\"token operator\">=</span> <span class=\"token function\">DispatchQueue</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"io.safe.array.queue\"</span><span class=\"token punctuation\">,</span> attributes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Element</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>接著實作可能會用到的一些操作（包含 read/write）：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// For read</span>\n<span class=\"token keyword\">extension</span> <span class=\"token builtin\">SafeArray</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> <span class=\"token builtin\">first</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Element</span><span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> result<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Element</span><span class=\"token operator\">?</span>\n        queue<span class=\"token punctuation\">.</span>sync <span class=\"token punctuation\">{</span> result <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token builtin\">first</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> result\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// For write</span>\n<span class=\"token keyword\">extension</span> <span class=\"token builtin\">SafeArray</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> newElement<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        queue<span class=\"token punctuation\">.</span><span class=\"token function\">async</span><span class=\"token punctuation\">(</span>flags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>barrier<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>newElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>接著就可以放心的直接操作 array 囉：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> safeArray <span class=\"token operator\">=</span> <span class=\"token builtin\">SafeArray</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">concurrentPerform</span><span class=\"token punctuation\">(</span>iterations<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> i <span class=\"token keyword\">in</span>\n    <span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">concurrentPerform</span><span class=\"token punctuation\">(</span>iterations<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> j <span class=\"token keyword\">in</span>\n        safeArray<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<hr>\n<p>最後把 array 所擁有的方法全部 expose 出來：</p>\n<h1 id=\"performance-measure\"><a href=\"#performance-measure\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>performance measure</h1>\n<p>measure block：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">extension</span> <span class=\"token builtin\">Array</span> <span class=\"token keyword\">where</span> <span class=\"token builtin\">Element</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">TimeInterval</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">averageTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">TimeInterval</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">TimeInterval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">count</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> normalArrayConsumeTimes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">TimeInterval</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> threadSafeArrayConsumeTimes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">TimeInterval</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> testArrayA<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> testArrayB <span class=\"token operator\">=</span> <span class=\"token builtin\">ThreadSafeArray</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">measure</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">,</span> <span class=\"token number\">_</span> block<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> complete<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">TimeInterval</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"measuring <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>label<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>timeIntervalSince1970\n    <span class=\"token builtin\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sync <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">block</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> end <span class=\"token operator\">=</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>timeIntervalSince1970\n    <span class=\"token keyword\">let</span> time <span class=\"token operator\">=</span> end <span class=\"token operator\">-</span> start\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"measuring <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>label<span class=\"token delimiter variable\">)</span></span> time: <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>time<span class=\"token delimiter variable\">)</span></span> seconds\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">complete</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>單純讀取：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">10</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> loopCount <span class=\"token operator\">=</span> <span class=\"token number\">50000</span>\n\n    <span class=\"token function\">measure</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"normal array\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> testArrayA<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>loopCount <span class=\"token punctuation\">{</span>\n            <span class=\"token number\">_</span> <span class=\"token operator\">=</span> testArrayA<span class=\"token punctuation\">.</span><span class=\"token builtin\">last</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> complete<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> time <span class=\"token keyword\">in</span> normalArrayConsumeTimes<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">measure</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"thread safe array\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> testArrayB <span class=\"token operator\">=</span> <span class=\"token builtin\">ThreadSafeArray</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>loopCount <span class=\"token punctuation\">{</span>\n            <span class=\"token number\">_</span> <span class=\"token operator\">=</span> testArrayB<span class=\"token punctuation\">.</span><span class=\"token builtin\">last</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> complete<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> time <span class=\"token keyword\">in</span> threadSafeArrayConsumeTimes<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// normal array average time: 0.04547381401062012</span>\n<span class=\"token comment\">// thread safe array average time: 0.09168415069580078</span>\n<span class=\"token comment\">// thread safe array is 50.40166302952637% slower</span></code></pre></div>\n<p>thread safe 讀取效能上降低了 50%。</p>\n<hr>\n<p>單純寫入：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">10</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> loopCount <span class=\"token operator\">=</span> <span class=\"token number\">50000</span>\n\n    <span class=\"token function\">measure</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"normal array\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> testArrayA<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>loopCount <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>testArrayA<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> complete<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> time <span class=\"token keyword\">in</span> normalArrayConsumeTimes<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">measure</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"thread safe array\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> testArrayB <span class=\"token operator\">=</span> <span class=\"token builtin\">ThreadSafeArray</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>loopCount <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>testArrayB<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> complete<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> time <span class=\"token keyword\">in</span> threadSafeArrayConsumeTimes<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// normal array average time: 0.040544438362121585</span>\n<span class=\"token comment\">// thread safe array average time: 0.3030177116394043</span>\n<span class=\"token comment\">// thread safe array is 86.61977937105864% slower</span></code></pre></div>\n<p>thread safe 讀取效能上降低了 86%。</p>\n<hr>\n<p>如果同時讀寫的話：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">10</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> loopCount <span class=\"token operator\">=</span> <span class=\"token number\">50000</span>\n\n    <span class=\"token function\">measure</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"normal array\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> testArrayA<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>loopCount <span class=\"token punctuation\">{</span>\n            testArrayA<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token number\">_</span> <span class=\"token operator\">=</span> testArrayA<span class=\"token punctuation\">.</span><span class=\"token builtin\">last</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> complete<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> time <span class=\"token keyword\">in</span> normalArrayConsumeTimes<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">measure</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">:</span> <span class=\"token string\">\"thread safe array\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> testArrayB <span class=\"token operator\">=</span> <span class=\"token builtin\">ThreadSafeArray</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token number\">_</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>loopCount <span class=\"token punctuation\">{</span>\n            testArrayB<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token number\">_</span> <span class=\"token operator\">=</span> testArrayB<span class=\"token punctuation\">.</span><span class=\"token builtin\">last</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> complete<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> time <span class=\"token keyword\">in</span> threadSafeArrayConsumeTimes<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// normal array average time: 0.05463418960571289</span>\n<span class=\"token comment\">// thread safe array average time: 0.9117634773254395</span>\n<span class=\"token comment\">// thread safe array is 94.00785500138957% slower</span></code></pre></div>\n<p>thread safe 讀寫效能上降低了 94%。</p>\n<hr>\n<p>雖然效能明顯降低很多，但可以注意到的是每個 iteration 都有 5 萬次，如果單純看一般 array 跟 thread safe array 一次讀寫時間，以下是只讀寫 100 次的時間：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">normal array average time:\n0.00014765262603759765\n\nthread safe array average time:\n0.002648663520812988</code></pre></div>\n<p>兩者的時間都很小，以手機 60 fps 的更新率來算，1 fps 你有 0.016 秒的運算時間可以使用，相比起來 thread safe 的運算時間小很多。如果怕讀取會卡住等寫入完成的話，可以先到背景讀取，等到取得你要的資料時再回到 main 即可。</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>thread safe array 一次讀寫操作約耗時 0.000026487 秒，在 0.016 秒中可以執行一樣的操作 600 次。但整體速度也要取決於裝置的 cpu，這裡只是大略測試。</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<p>Gist link: <a href=\"https://gist.github.com/yoxisem544/41811dbb8aaabf22bde02e8610de78ff\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gist.github.com/yoxisem544/41811dbb8aaabf22bde02e8610de78ff</a></p>","timeToRead":4,"frontmatter":{"title":"Thread Safety in iOS","date":"September 17, 2019","spoiler":"What exactly is thread safe?"},"fields":{"slug":"/thread-safety-in-ios/","langKey":"en"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/thread-safety-in-ios/","previous":{"fields":{"slug":"/exponential-retry/","langKey":"en","directoryName":"exponential-retry","maybeAbsoluteLinks":[]},"frontmatter":{"title":"How to implement exponential retry?"}},"next":{"fields":{"slug":"/run-your-ios-project-using-fastlane-on-jenkins/","langKey":"en","directoryName":"run-your-ios-project-using-fastlane-on-jenkins","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Run Your iOS Project Using Fastlane on Jenkins"}},"translations":[],"translatedLinks":[]}}}