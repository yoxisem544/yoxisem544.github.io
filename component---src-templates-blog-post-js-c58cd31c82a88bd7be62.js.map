{"version":3,"sources":["webpack:///./src/components/Signup.js","webpack:///./src/utils/i18n.js","webpack:///./src/templates/blog-post.js","webpack:///./src/utils/helpers.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/Bio.js","webpack:///./src/assets/profile-pic.jpg","webpack:///./src/components/Panel.js","webpack:///./src/components/SEO.js","webpack:///./i18n.js"],"names":["Signup","render","React","Component","codeToLanguage","code","supportedLanguages","replace","systemFont","Translations","this","props","translations","lang","languageLink","editUrl","readerTranslations","filter","hasRussianTranslation","indexOf","className","Panel","style","fontFamily","length","to","map","l","i","Fragment","key","href","target","rel","BlogPostTemplate","post","data","markdownRemark","siteTitle","get","pageContext","previous","next","slug","translatedLinks","fields","langKey","html","forEach","link","translatedLink","RegExp","slice","sort","a","b","loadFontsForCode","rawSlug","targetLang","createLanguageLink","enSlug","discussUrl","encodeURIComponent","Layout","location","title","SEO","frontmatter","description","spoiler","color","scale","display","marginBottom","rhythm","marginTop","formatPostDate","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","margin","boxShadow","textDecoration","Bio","flexWrap","justifyContent","listStyle","padding","marginRight","pageQuery","minutes","cups","Math","round","Array","E","fill","join","Date","prototype","toLocaleDateString","args","day","month","year","Boolean","$export","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","aLen","arguments","index","undefined","end","endPos","src","profilePic","alt","width","height","borderRadius","maxWidth","children","fontSize","border","background","wordBreak","query","meta","image","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","en","ru","tr","es","ko","sv","it","id","pl","ja","fr","hu","vi","th","my","sk","te","uk","bg","cs","de","nl","nb","fa","ar","sr"],"mappings":"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","file":"component---src-templates-blog-post-js-c58cd31c82a88bd7be62.js","sourcesContent":["import React from 'react';\n\nimport './Signup.css';\n\nclass Signup extends React.Component {\n  render() {\n    return null;\n  }\n}\n\nexport default Signup;\n","import { supportedLanguages } from './../../i18n';\n\n// This is kind of a mess for some languages.\n// Try to be as short as possible.\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\n// Some resources:\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n// https://www.w3.org/International/articles/language-tags/\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\n\nexport const codeToLanguage = code =>\n  supportedLanguages[code].replace(/ /g, ' ' /* nbsp */);\n\nexport const loadFontsForCode = code => {\n  switch (code) {\n    case 'ru':\n    case 'bg':\n      import('../fonts/fonts-shared.cyrillic.css');\n      import('../fonts/fonts-post.cyrillic.css');\n      break;\n    case 'uk':\n      import('../fonts/fonts-shared.cyrillic.css');\n      import('../fonts/fonts-post.cyrillic.css');\n      import('../fonts/fonts-shared.latin-ext.css');\n      import('../fonts/fonts-post.latin-ext.css');\n      break;\n    case 'cs':\n    case 'da':\n    case 'de':\n    case 'es':\n    case 'fi':\n    case 'fr':\n    case 'hu':\n    case 'it':\n    case 'nl':\n    case 'no':\n    case 'pl':\n    case 'pt-br':\n    case 'sk':\n    case 'sr':\n    case 'sq':\n    case 'sv':\n    case 'tr':\n      import('../fonts/fonts-shared.latin-ext.css');\n      import('../fonts/fonts-post.latin-ext.css');\n      break;\n    case 'vi':\n      import('../fonts/fonts-shared.vietnamese.css');\n      import('../fonts/fonts-post.vietnamese.css');\n      break;\n    case 'fa':\n      import('../fonts/fonts-post.persian.css');\n      break;\n    case 'ar':\n      import('../fonts/fonts-post.arabic.css');\n      break;\n    default:\n      break;\n  }\n};\n\n// TODO: the curried signature is weird.\nexport const createLanguageLink = (slug, lang) => {\n  const rawSlug = slug.replace(`${lang}/`, '');\n\n  return targetLang =>\n    targetLang === 'en' ? rawSlug : `${targetLang}${rawSlug}`;\n};\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Signup from '../components/Signup';\nimport Panel from '../components/Panel';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n} from '../utils/i18n';\n\nconst GITHUB_USERNAME = 'yoxisem544';\nconst GITHUB_REPO_NAME = 'yoxisem544.github.io';\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nclass Translations extends React.Component {\n  render() {\n    let { translations, lang, languageLink, editUrl } = this.props;\n\n    let readerTranslations = translations.filter(lang => lang !== 'ru');\n    let hasRussianTranslation = translations.indexOf('ru') !== -1;\n\n    return (\n      <div className=\"translations\">\n        <Panel style={{ fontFamily: systemFont }}>\n          {translations.length > 0 && (\n            <span>\n              {hasRussianTranslation && (\n                <span>\n                  Originally written in:{' '}\n                  {'en' === lang ? (\n                    <b>{codeToLanguage('en')}</b>\n                  ) : (\n                    <Link to={languageLink('en')}>English</Link>\n                  )}\n                  {' • '}\n                  {'ru' === lang ? (\n                    <b>Русский (авторский перевод)</b>\n                  ) : (\n                    <Link to={languageLink('ru')}>\n                      Русский (авторский перевод)\n                    </Link>\n                  )}\n                  <br />\n                  <br />\n                </span>\n              )}\n              <span>Translated by readers into: </span>\n              {readerTranslations.map((l, i) => (\n                <React.Fragment key={l}>\n                  {l === lang ? (\n                    <b>{codeToLanguage(l)}</b>\n                  ) : (\n                    <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>\n                  )}\n                  {i === readerTranslations.length - 1 ? '' : ' • '}\n                </React.Fragment>\n              ))}\n            </span>\n          )}\n          {lang !== 'en' && (\n            <>\n              <br />\n              <br />\n              {lang !== 'ru' && (\n                <>\n                  <Link to={languageLink('en')}>Read the original</Link>\n                  {' • '}\n                  <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Improve this translation\n                  </a>\n                  {' • '}\n                </>\n              )}\n              <Link to={`/${lang}`}>View all translated posts</Link>{' '}\n            </>\n          )}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    let {\n      previous,\n      next,\n      slug,\n      translations,\n      translatedLinks,\n    } = this.props.pageContext;\n    const lang = post.fields.langKey;\n\n    // Replace original links with translated when available.\n    let html = post.html;\n    translatedLinks.forEach(link => {\n      // jeez\n      function escapeRegExp(str) {\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      }\n      let translatedLink = '/' + lang + link;\n      html = html.replace(\n        new RegExp('\"' + escapeRegExp(link) + '\"', 'g'),\n        '\"' + translatedLink + '\"'\n      );\n    });\n\n    translations = translations.slice();\n    translations.sort((a, b) => {\n      return codeToLanguage(a) < codeToLanguage(b) ? -1 : 1;\n    });\n\n    loadFontsForCode(lang);\n    // TODO: this curried function is annoying\n    const languageLink = createLanguageLink(slug, lang);\n    const enSlug = languageLink('en');\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${enSlug.slice(\n      1,\n      enSlug.length - 1\n    )}/index${lang === 'en' ? '' : '.' + lang}.md`;\n    const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n      `https://yoxisem544.github.io${enSlug}`\n    )}`;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <main>\n          <article>\n            <header>\n              <h1 style={{ color: 'var(--textTitle)' }}>\n                {post.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: 'block',\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date, lang)}\n                {` • ${formatReadingTime(post.timeToRead)}`}\n              </p>\n              {translations.length > 0 && (\n                <Translations\n                  translations={translations}\n                  editUrl={editUrl}\n                  languageLink={languageLink}\n                  lang={lang}\n                />\n              )}\n            </header>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n            <footer>\n              <p>\n                <a href={discussUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Discuss on Twitter\n                </a>\n                {` • `}\n                <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Edit on GitHub\n                </a>\n              </p>\n            </footer>\n          </article>\n        </main>\n        <aside>\n          <div\n            style={{\n              margin: '90px 0 40px 0',\n              fontFamily: systemFont,\n            }}\n          >\n            <Signup />\n          </div>\n          <h3\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: rhythm(0.25),\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n              }}\n              to={'/'}\n            >\n              Hello Swift!\n            </Link>\n          </h3>\n          <Bio />\n          <nav>\n            <ul\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                listStyle: 'none',\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={previous.fields.slug}\n                    rel=\"prev\"\n                    style={{ marginRight: 20 }}\n                  >\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('🍱')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`David Lin`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 310 }}>\n          Personal blog by{' '}\n          <a href=\"https://mobile.twitter.com/yoxisem544\">David Lin</a>.{' '}\n          <br></br>I write something about Swift.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","module.exports = __webpack_public_path__ + \"static/profile-pic-53af144d52b11962dbbff58afd3560b3.jpg\";","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s — ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} — A blog by David Lin`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","// Please keep keys lowercase!\nexports.supportedLanguages = {\n  en: 'English',\n  ru: 'Русский',\n  tr: 'Türkçe',\n  es: 'Español',\n  ko: '한국어',\n  sv: 'Svenska',\n  it: 'Italiano',\n  id: 'Bahasa Indonesia',\n  'pt-br': 'Português do Brasil',\n  pl: 'Polski',\n  'zh-hant': '繁體中文',\n  'zh-hans': '简体中文',\n  ja: '日本語',\n  fr: 'Français',\n  hu: 'Magyar',\n  vi: 'Tiếng Việt',\n  th: 'ไทย',\n  my: 'မြန်မာဘာသာ',\n  sk: 'Slovenčina',\n  te: 'తెలుగు',\n  uk: 'Українська',\n  bg: 'Български',\n  cs: 'Čeština',\n  de: 'Deutsch',\n  nl: 'Nederlands',\n  nb: 'Norsk',\n  fa: 'فارسی',\n  ar: 'العربية',\n  sr: 'srpski',\n};\n"],"sourceRoot":""}